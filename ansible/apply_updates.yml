---
# This playbook applies system updates
#
# Usage: ansible-playbook -vv -i hosts --vault-password-file ~/.vault2113.txt apply_updates.yml

- hosts: all
  tasks:
    - group_by: key=os_{{ ansible_os_family }}

- name: Update packages os_Debian
  hosts: os_Debian
  gather_facts: False
  become: yes
  tasks:
    - apt: update_cache=yes upgrade=yes

- name: Update packages os_Darwin
  hosts: os_Darwin
  gather_facts: false
  tasks:
    - name: Native updates...
      command: softwareupdate --install --all --restart
      become: yes
    - name: Homebrew updates...
      homebrew: update_homebrew=yes upgrade_all=yes

- name: Update packages os_FreeBSD
  hosts: os_FreeBSD
  gather_facts: false
  become: yes
  tasks:
    - command: pkg upgrade --yes
      register: pkg_result
      changed_when: pkg_result.stdout.find("Your packages are up to date.") == -1

- name: Update packages os_Windows
  hosts: os_Windows
  gather_facts: false
  tasks:
    - win_chocolatey: name=PSWindowsUpdate state=present
    - win_updates: category=security

- name: Reboot if new kernel os_Debian
  hosts: os_Debian&!no_auto_reboot
  gather_facts: false
  become: yes
  tasks:
    - name: Check for reboot hint
      shell: if [ $(readlink -f /vmlinuz) != /boot/vmlinuz-$(uname -r) ]; then echo 'reboot'; fi
      ignore_errors: true
      register: reboot_hint
      changed_when: false

    - name: Rebooting...
      command: reboot "New kernel installed"
      async: 0
      poll: 0
      ignore_errors: true
      when: reboot_hint.stdout.find("reboot") != -1

    - name: Wait for reboots to complete
      pause: minutes=3
      when: reboot_hint.stdout.find("reboot") != -1

    - name: Show running kernel
      shell: uname -r
      register: running_kernel
      changed_when: false
